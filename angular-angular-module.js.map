{"version":3,"sources":["webpack:///./src/app/angular/angular-advance/angular-advance.component.css","webpack:///./src/app/angular/angular-advance/angular-advance.component.html","webpack:///./src/app/angular/angular-advance/angular-advance.component.ts","webpack:///./src/app/angular/angular-basic/angular-basic.component.css","webpack:///./src/app/angular/angular-basic/angular-basic.component.html","webpack:///./src/app/angular/angular-basic/angular-basic.component.ts","webpack:///./src/app/angular/angular-basic/angular-detail/angular-detail.component.css","webpack:///./src/app/angular/angular-basic/angular-detail/angular-detail.component.html","webpack:///./src/app/angular/angular-basic/angular-detail/angular-detail.component.ts","webpack:///./src/app/angular/angular-cli/angular-cli.component.css","webpack:///./src/app/angular/angular-cli/angular-cli.component.html","webpack:///./src/app/angular/angular-cli/angular-cli.component.ts","webpack:///./src/app/angular/angular-dynamic-forms/angular-dynamic-forms.component.css","webpack:///./src/app/angular/angular-dynamic-forms/angular-dynamic-forms.component.html","webpack:///./src/app/angular/angular-dynamic-forms/angular-dynamic-forms.component.ts","webpack:///./src/app/angular/angular-dynamic-forms/angular-dynamic-forms.service.ts","webpack:///./src/app/angular/angular-dynamic/ad-host.directive.ts","webpack:///./src/app/angular/angular-dynamic/angular-dynamic.component.css","webpack:///./src/app/angular/angular-dynamic/angular-dynamic.component.html","webpack:///./src/app/angular/angular-dynamic/angular-dynamic.component.ts","webpack:///./src/app/angular/angular-dynamic/dynamic-ad/dynamic-ad.component.css","webpack:///./src/app/angular/angular-dynamic/dynamic-ad/dynamic-ad.component.html","webpack:///./src/app/angular/angular-dynamic/dynamic-ad/dynamic-ad.component.ts","webpack:///./src/app/angular/angular-routing.module.ts","webpack:///./src/app/angular/angular-test/angular-test.component.css","webpack:///./src/app/angular/angular-test/angular-test.component.html","webpack:///./src/app/angular/angular-test/angular-test.component.ts","webpack:///./src/app/angular/angular-test/angular-test.service.ts","webpack:///./src/app/angular/angular-translate/angular-translate.component.css","webpack:///./src/app/angular/angular-translate/angular-translate.component.html","webpack:///./src/app/angular/angular-translate/angular-translate.component.ts","webpack:///./src/app/angular/angular.module.ts","webpack:///./src/app/angular/react-form/react-form.component.css","webpack:///./src/app/angular/react-form/react-form.component.html","webpack:///./src/app/angular/react-form/react-form.component.ts"],"names":[],"mappings":"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","file":"angular-angular-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<h1>Angular 的元件種類</h1>\\n<ul>\\n  <li>\\n      <h4>@Component：</h4><p>含有樣板的指令。</p>\\n  </li>\\n  <li>\\n    <h4>@Directive：</h4><p>與@Component差異在於Directive沒有template，通常用在取得DOM來修改元素外觀或元素。</p>\\n  </li>\\n  <li>\\n      <h4>@Pipe：</h4><p>只能在樣版html使用此元件。</p>\\n  </li>\\n  <li>\\n      <h4>@Injectable：</h4><p>只能在元件ts中使用此元件，任意元件皆可透過DI注入。</p>\\n  </li>\\n  <li>\\n    <h4>@ViewChild</h4>\\n    <img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a8.png\\\" />\\n    <br>\\n    <button #btn mat-raised-button (click)=\\\"getViewChild()\\\" color=\\\"warn\\\">使用ViewChild取得這個按鈕物件</button>\\n  </li>\\n</ul>\\n\\n\\n\\n\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-angular-advance',\n  templateUrl: './angular-advance.component.html',\n  styleUrls: ['./angular-advance.component.css']\n})\nexport class AngularAdvanceComponent implements OnInit {\n  @ViewChild('btn') btn: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  getViewChild() {\n    console.log('btn = ', this.btn);\n  }\n\n}\n","module.exports = \".mat-raised-button.mat-primary{\\r\\n  background-color: #a0f055;\\r\\n}\\r\\n\"","module.exports = \"<div>\\n<h2>首頁html與Angular主程式</h2>\\n<ul>\\n    <li><p>src/index.html：預設網站首頁</p></li>\\n    <li><p>src/style.css：預設全站共用的css</p></li>\\n    <li><p>src/main.ts：Angular啟動時程式進入點</p></li>\\n    <li><p>src/polyfills.ts：瀏覽器相容設定，IE預設不支援Angular，要去打開註解IE才能正確運行。</p></li>\\n    <li><p>src/assets：網站相關的靜態檔案資源(如css, images, js..)。</p></li>\\n    <hr>\\n    <h4>應用程式原始碼</h4>\\n    <li><p>src/app/app.module.ts：應用程式的全域模組。</p></li>\\n    <li><p>src/app/app.component.ts：根元件主程式。</p></li>\\n    <li><p>src/app/app.component.html：根元件模板。</p></li>\\n    <li><p>src/app/app.component.css：根元件模板的css。</p></li>\\n    <li><p>src/app/app.component.spec.ts：根元件單元測試程式。</p></li>\\n    <hr>\\n    <h4>共用的環境變數</h4>\\n    <li><p>src/environments/environment.ts：預設的環境變數設定。</p></li>\\n    <li><p>src/environments/environment.prod.ts：正式產品環境設定(<span red>Angular 6 使用 ng build -c prod/ Angular 5 以前使用: ng build --env=prod </span>)。</p></li>\\n    <h4>如何新增環境變數?</h4>\\n    <p>例如要新增一個uat環境，在environments資料夾下新增environment.uat.ts，</p>\\n    <p>然後在angular.json中build找到configurations，加上：</p>\\n    <pre>\\n        \\\"uat\\\": {{'{'}}\\n          \\\"fileReplacements\\\": [\\n          {{'{'}}\\n              \\\"replace\\\": \\\"src/environments/environment.ts\\\",\\n              \\\"with\\\": \\\"src/environments/environment.uat.ts\\\"\\n          {{'}'}}\\n          ],\\n          \\\"optimization\\\": true,\\n          \\\"outputHashing\\\": \\\"all\\\",\\n          \\\"sourceMap\\\": true,\\n          \\\"extractCss\\\": true,\\n          \\\"namedChunks\\\": false,\\n          \\\"aot\\\": true,\\n          \\\"extractLicenses\\\": true,\\n          \\\"vendorChunk\\\": false,\\n          \\\"buildOptimizer\\\": true\\n      {{'}'}}\\n    </pre>\\n    <p>如果想在ng serve啟動時測試，在angular.json中serve底下的configurations也要新增：</p>\\n    <pre>\\n        \\\"uat\\\": {{'{'}}\\n          \\\"browserTarget\\\": \\\"angular-learning:build:uat\\\"\\n          {{'}'}}\\n    </pre>\\n    <p>目前環境變數：{{ environmentName }}</p>\\n    <hr>\\n    <img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a1.png\\\" />\\n    <h3>app.module介紹：</h3>\\n    <img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a2.png\\\" />\\n    <h3>app.component介紹：</h3>\\n    <img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a3.png\\\" />\\n  </ul>\\n\\n<h2>資料繫結的四種方法</h2>\\n<ul>\\n  <li>\\n    <p>內嵌繫結(interpolation)：</p>\\n    <p>{{ '{' }}{{ '{' }} property {{ '}' }}{{ '}' }}</p>\\n  </li>\\n  <li>\\n    <p>屬性繫結(property binding)：</p>\\n    <p>[property-name] = \\\"statement\\\"</p>\\n    <p> property-name = \\\"expression\\\"</p>\\n  </li>\\n  <li>\\n    <p>事件繫結(event binding)：</p>\\n    <p> (eventName) = \\\"method($event)\\\"</p>\\n  </li>\\n  <li>\\n    <p>雙向繫結(two-way binding)：</p>\\n    <p>[(ngModel)]=\\\"property\\\"</p>\\n  </li>\\n</ul>\\n\\n<h2>範本參考變數(template reference variables)</h2>\\n<p>在html上使用 #name語法，會在該template上建立名為name的區域變數，且該變數會儲存該標籤上的DOM物件。</p>\\n<p>可以透過事件繫結將DOM物件的屬性傳回component的ts中。</p>\\n\\n<h2>三種Angular 指令(directives)</h2>\\n<ul>\\n    <li>\\n      <p>元件型指令(component directives)：</p>\\n      <p>例如：< app-xxx >< /app-xxx>  </p>\\n    </li>\\n    <li>\\n      <p>屬性型指令(attribute directives)：</p>\\n      <p>這種指令會修改元素的外觀或行為。</p>\\n      <p> 例如：ngStyle, ngClass。</p>\\n    </li>\\n    <li>\\n      <p>結構型指令(structural directives)：</p>\\n      <p>這種指令會透過新增和刪除DOM元素來改變DOM結構。</p>\\n      <p> 例如：ngIf, ngFor, ngSwitch。</p>\\n      <p> ngSwitch前面不加*星號。</p>\\n    </li>\\n  </ul>\\n<h2>Angular component之間的溝通方式@Input/@Output</h2>\\n<h4>父Component 傳資料給子Component</h4>\\n<p>傳入屬性，兒子接值的ts用@input</p>\\n< app-兒子 [data]=\\\"父的data\\\">\\n<p>兒子ts:\\n@Input() data;</p>\\n\\n<hr>\\n<p>Demo：</p>\\n<h4>以下藍色部分為兒子app-angular-detail component：</h4>\\n<p>將陣列資料傳入在兒子app-angular-detail，使用ngFor跑出資料，點擊按鈕後回傳給父angular-basic選擇的值。</p>\\n<app-angular-detail (chooseValue)=\\\"doChoose($event)\\\" [data]=\\\"fatherArray\\\"></app-angular-detail>\\n<h4>兒子app-angular-detail的html(接收來自父的資料，並使用emit將事件發射給父component)：</h4>\\n< button mat-raised-button color=\\\"accent\\\" *ngFor=\\\"let item of data\\\" (click)=\\\"chooseValue.emit(item)\\\">  item.name  < /button>\\n<h4>兒子app-angular-detail的ts：</h4>\\n<pre>\\n  @Input() data;\\n  @Output() chooseValue = new EventEmitter{{ '<' }}any{{'>'}}();\\n\\n</pre>\\n\\n<h4>父angular-basic 的html(將兒子寫上去)：</h4>\\n{{ '<' }}app-angular-detail (chooseValue)=\\\"doChoose($event)\\\" [data]=\\\"fatherArray\\\" {{'>'}}{{ '<' }}/app-angular-detail{{'>'}}\\n<h4>父angular-basic 的ts：</h4>\\n<pre>\\nfatherArray = [\\n{{ '{' }}id: 1, name: '園丁'{{ '}' }},\\n{{ '{' }}id: 2, name: '律師'{{ '}' }},\\n{{ '{' }}id: 3, name: '祭司'{{ '}' }},\\n{{ '{' }}id: 4, name: '盲女'{{ '}' }},\\n{{ '{' }}id: 5, name: '前鋒'{{ '}' }},\\n{{ '{' }}id: 6, name: '傭兵'{{ '}' }},\\n{{ '{' }}id: 7, name: '空軍'{{ '}' }},\\n{{ '{' }}id: 8, name: '魔術師'{{ '}' }},\\n{{ '{' }}id: 9, name: '冒險家'{{ '}' }},\\n{{ '{' }}id: 10, name: '機械師'{{ '}' }},\\n{{ '{' }}id: 11, name: '慈善家'{{ '}' }},\\n{{ '{' }}id: 12, name: '醫生'{{ '}' }},\\n{{ '{' }}id: 13, name: '幸運兒'{{ '}' }}\\n];\\n\\ndoChoose($event) {{ '{' }}\\n  this.openSnackBar($event.name);\\n{{ '}' }}\\n</pre>\\n\\n<h1>生命週期</h1>\\n<img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a4.png\\\" />\\n<img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a5.png\\\" />\\n<img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a6.png\\\" />\\n<p>以上面子元件和父元件做例子：</p>\\n<p>AngularBasicComponent 父元件發生ngOnInit</p>\\n<p>AngularBasicComponent 父元件發生ngAfterContentInit</p>\\n<p>AngularDetailComponent 子元件發生ngOnInit</p>\\n<p>AngularDetailComponent 子元件發生ngAfterContentInit</p>\\n<p>AngularDetailComponent 子元件發生ngAfterViewInit</p>\\n<p>如果兒子裡面還有兒子，就會繼續孫子的ngOnInit和ngAfterViewInit下去....</p>\\n<p>AngularBasicComponent 父元件發生ngAfterViewInit</p>\\n\\n<h1>封裝樣式 View Encapsulation</h1>\\n<ul>\\n  <li><p>ViewEncapsulation.None：所有從元件註冊的樣式都會加入整份網頁。</p></li>\\n  <li><p>ViewEncapsulation.Emulated(預設)：元件的樣式只套用到該元件的html。</p></li>\\n  <li><p>ViewEncapsulation.Native：元件以Shadow DOM 技術將元素網頁封裝Web 元件。</p></li>\\n</ul>\\n<button mat-raised-button color=\\\"primary\\\" >強迫更改按鈕顏色，但只會影響AngularBasicComponent</button>\\n<br>\\n</div>\\n\"","import { Component, OnInit, AfterViewInit, AfterContentInit } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-angular-basic',\n  templateUrl: './angular-basic.component.html',\n  styleUrls: ['./angular-basic.component.css']\n})\nexport class AngularBasicComponent implements OnInit, AfterViewInit, AfterContentInit {\n  environmentName = environment.envName;\n\n  fatherArray = [\n    {id: 1, name: '園丁'},\n    {id: 2, name: '律師'},\n    {id: 3, name: '祭司'},\n    {id: 4, name: '盲女'},\n    {id: 5, name: '前鋒'},\n    {id: 6, name: '傭兵'},\n    {id: 7, name: '空軍'},\n    {id: 8, name: '魔術師'},\n    {id: 9, name: '冒險家'},\n    {id: 10, name: '機械師'},\n    {id: 11, name: '慈善家'},\n    {id: 12, name: '醫生'},\n    {id: 13, name: '幸運兒'}\n  ];\n  constructor( public snackBar: MatSnackBar) { }\n\n  ngAfterContentInit() {\n    console.log('AngularBasicComponent 父元件發生ngAfterContentInit');\n  }\n  ngAfterViewInit() {\n    console.log('AngularBasicComponent 父元件發生ngAfterViewInit');\n  }\n\n  doChoose($event) {\n    this.openSnackBar($event.name);\n  }\n\n  openSnackBar(message) {\n    this.snackBar.open('兒子傳回選擇值: ' + message, '', {\n      duration: 2000\n    });\n  }\n  ngOnInit() {\n    console.log('AngularBasicComponent 父元件發生ngOnInit');\n  }\n\n}\n","module.exports = \".demo {\\r\\n  background: #82B1FF;\\r\\n}\\r\\n.button-row button,\\r\\n.button-row a {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\"","module.exports = \"<div  mat-elevation-z8 class=\\\"demo\\\" padding shadow>\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"accent\\\" *ngFor=\\\"let item of data\\\" (click)=\\\"chooseValue.emit(item)\\\">{{ item.name }}</button>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit, Input, Output, EventEmitter, AfterViewInit, AfterContentInit } from '@angular/core';\n\n@Component({\n  selector: 'app-angular-detail',\n  templateUrl: './angular-detail.component.html',\n  styleUrls: ['./angular-detail.component.css']\n})\nexport class AngularDetailComponent implements OnInit, AfterViewInit, AfterContentInit {\n  @Input() data;\n  @Output() chooseValue = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngAfterContentInit() {\n    console.log('AngularDetailComponent 子元件發生ngAfterContentInit');\n  }\n\n\n  ngAfterViewInit() {\n    console.log('AngularDetailComponent 子元件發生ngAfterViewInit');\n  }\n  ngOnInit() {\n    console.log('AngularDetailComponent 子元件發生ngOnInit');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h2>AngularCLI</h2>\\n<table style=\\\"width: 100%;\\\" mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n    <ng-container matColumnDef=\\\"use\\\">\\n        <th mat-header-cell *matHeaderCellDef> 型別種類 </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.use}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"cli\\\">\\n        <th mat-header-cell *matHeaderCellDef> JavaScript </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.cli}} </td>\\n      </ng-container>\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n<p>如果是dev模式，ng build是使用environment.ts設定檔。</p>\\n<p>如果是prod模式，ng build是使用environment.prod.ts設定檔，JavaScript 與 CSS 都會壓縮，且不提供 source map，因此最後的 JavaScript 與 CSS 會較小。</p>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nexport interface PeriodicElement {\n  use?: string;\n  cli?: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {use: '查看目前Angular版本資訊', cli: 'ng v'},\n  {use: '使用別的埠號啟動', cli: 'ng serve --port 8080'},\n  {use: '建立一個Angular專案', cli: 'ng new project-name'},\n  {use: '建立包含css,html,spec.ts,ts等四隻檔案的Component，預設會自動將component import到app.module.ts裡',\n    cli: 'ng g c component-name， 不想自動import可以多加--skip-import'},\n  {use: '建立一個Service', cli: 'ng g s service-name'},\n  {use: '建立一個Module', cli: 'ng g m module-name，使用ng g m module-name --routing可建立有routing的Module'},\n  {use: '建立一個Pipe', cli: 'ng g pipe pipe-name'},\n  {use: '建立一個Class', cli: 'ng g class class-name'},\n  {use: '建立一個interface', cli: 'ng g i interface-name'},\n  {use: '建立一個Directive', cli: 'ng g d directive-name'},\n  {use: '建立一個Enum', cli: 'ng g enum enum-name'},\n  {use: '打包程式，預設會將程式放到dist目錄下', cli: 'ng build，可以加--prod切換成prod模式'},\n];\n\n@Component({\n  selector: 'app-angular-cli',\n  templateUrl: './angular-cli.component.html',\n  styleUrls: ['./angular-cli.component.css']\n})\nexport class AngularCLIComponent implements OnInit {\n  displayedColumns: string[] = ['use', 'cli'];\n  dataSource = ELEMENT_DATA;\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  動態載入表單\\n</h1>\\n\\n<form [formGroup]=\\\"form\\\">\\n\\n    <div *ngFor=\\\"let question of questionModel\\\">\\n      <label [for]=\\\"question.key\\\">{{ question.label}}</label>\\n\\n      <div [ngSwitch]=\\\"question.controlType\\\">\\n        <mat-form-field *ngSwitchCase=\\\"'textbox'\\\" >\\n          <input matInput [formControlName]=\\\"question.key\\\" [id]=\\\"question.key\\\" [type]=\\\"textboxQuestion(question.key).type\\\">\\n\\n          <mat-error *ngIf=\\\"getFormControl(question.key).invalid\\\">\\n              {{ question.label }} 資料有誤\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field *ngSwitchCase=\\\"'dropdown'\\\">\\n          <mat-select  [formControlName]=\\\"question.key\\\">\\n          <mat-option *ngFor=\\\"let option of dropdownQuestion(question.key).options\\\" [value]=\\\"option.key\\\">\\n            {{ option.value }}\\n          </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <button mat-raised-button type=\\\"button\\\" (click)=\\\"submitData()\\\" color=\\\"primary\\\" [disabled]=\\\"form.invalid\\\">送出</button>\\n    <pre>{{ form.value | json }}</pre>\\n  </form>\\n\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { AngularDynamicFormsService } from './angular-dynamic-forms.service';\n\nexport interface QuestionBaseType<T> {\n  key: string;\n  label: string;\n  controlType: 'textbox' | 'dropdown';\n  value: T;\n  required: boolean;\n}\n\nexport class QuestionBase<T> implements QuestionBaseType<T> {\n  key: string;\n  label: string;\n  controlType: 'textbox' | 'dropdown';\n  value: T;\n  required: boolean;\n\n  constructor(options: QuestionBaseType<T>) {\n    this.key = options.key;\n    this.label = options.label;\n    this.controlType = options.controlType;\n    this.value = options.value;\n    this.required = options.required;\n  }\n}\n\nexport interface TextboxQuestionType extends QuestionBase<string> {\n  type: 'text' | 'password' | 'email';\n  placeholder?: string;\n}\n\nexport class TextboxQuestion extends QuestionBase<string> {\n  type = 'text';\n  placeholder = '';\n\n  constructor(options: TextboxQuestionType) {\n    super(options);\n    this.type = options.type;\n    this.placeholder = options.placeholder;\n  }\n}\n\nexport interface DropdownQuestionType extends QuestionBase<number> {\n  options: { key: number; value: string }[];\n}\n\nexport class DropdownQuestion extends QuestionBase<number> {\n  options: { key: number; value: string }[] = [];\n\n  constructor(options: DropdownQuestionType) {\n    super(options);\n    this.options = options.options;\n  }\n}\n\n\n@Component({\n  selector: 'app-angular-dynamic-forms',\n  templateUrl: './angular-dynamic-forms.component.html',\n  styleUrls: ['./angular-dynamic-forms.component.css']\n})\nexport class AngularDynamicFormsComponent implements OnInit {\n    questionModel = [\n    new TextboxQuestion({\n      key: 'name',\n      label: '姓名',\n      value: null,\n      controlType: 'textbox',\n      required: true,\n      type: 'text',\n      placeholder: '請輸入姓名'\n    }),\n    new DropdownQuestion({\n      key: 'interest',\n      label: '興趣',\n      value: 1,\n      controlType: 'dropdown',\n      required: false,\n      options: [{ key: 0, value: 'Angular' }, { key: 1, value: 'React' }, { key: 2, value: 'Vue' }]\n    })\n  ];\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private angularDynamicFormsService: AngularDynamicFormsService\n  ) { }\n\n  ngOnInit() {\n    this.form = this.angularDynamicFormsService.convertQuestionToFormGroup(this.questionModel);\n  }\n\n  textboxQuestion(key: string): TextboxQuestion {\n    return this.questionModel.filter(question => question.key === key)[0] as TextboxQuestion;\n  }\n\n  getFormControl(key): AbstractControl {\n    return this.form.get(key);\n  }\n\n  dropdownQuestion(key: string): DropdownQuestion {\n    return this.questionModel.filter(question => question.key === key)[0] as DropdownQuestion;\n  }\n\n  submitData() {\n    console.log(this.form.value);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularDynamicFormsService {\n\n  constructor() { }\n\n  convertQuestionToFormGroup(questions: any[]) {\n    const group: any = {};\n\n    questions.forEach(question => {\n      group[question.key] = new FormControl(question.value || '', question.required ? Validators.required : null);\n    });\n\n    return new FormGroup(group);\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appAdHost]'\n})\nexport class AdHostDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef ) { }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>動態載入元件 </h1>\\n<h2>Angular Dynamic Component Loader</h2>\\n<ul>\\n    <li><p>1：建立元件容器 @Directive。</p>\\n    <img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a9.png\\\" />\\n    </li>\\n    <li>\\n      <p>2：要使用動態元件的地方裝上下面這個元件容器。</p>\\n      <p> < ng-template appAdHost>< /ng-template> </p>\\n    </li>\\n    <li>\\n        <p>3：使用ComponentFactoryResolver動態建立元件。</p>\\n        <img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-basic/a10.png\\\" />\\n    </li>\\n</ul>\\n\\n<h1>關於EntryComponents</h1>\\n<ul>\\n    <li><p>@NgModule的bootstrap[]：用來設定預設啟動的元件，註冊在bootstrap的元件同時也是EntryComponents。</p>\\n    <li><p>entryComponents：用來設定需要動態載入的元件，如果宣告在declarations裡但在任何html裡沒使用的話，會被Tree Shaking機制過濾掉。</p>\\n    <li><p>路由中設定的元件也屬於entryComponents。</p>\\n</li>\\n<hr>\\n<h4>Demo：</h4>\\n<p>按下按鈕後動態載入Component，並設定初始內容為</p>\\n<button mat-raised-button (click)=\\\"loadComponent()\\\" color=\\\"warn\\\">動態載入Component</button>\\n<ng-template appAdHost></ng-template>\\n\\n<h2>使用ngComponentOutlet</h2>\\n<p>缺點為沒辦法直接傳值進去，但也可以用service來傳值。</p>\\n<div *ngIf=\\\"isLoad\\\">\\n  <ng-container *ngComponentOutlet=\\\"dynamicAdComponent\\\"></ng-container>\\n</div>\\n\\n\"","import { Component, OnInit, ViewChild, ComponentFactoryResolver } from '@angular/core';\nimport { AdHostDirective } from './ad-host.directive';\nimport { DynamicAdComponent } from './dynamic-ad/dynamic-ad.component';\n\n@Component({\n  selector: 'app-angular-dynamic',\n  templateUrl: './angular-dynamic.component.html',\n  styleUrls: ['./angular-dynamic.component.css']\n})\nexport class AngularDynamicComponent implements OnInit {\n  dynamicAdComponent = DynamicAdComponent;\n  isLoad = false;\n  @ViewChild(AdHostDirective) appAdHost: AdHostDirective;\n  fatherArray = [\n    {id: 1, name: '園丁'},\n    {id: 2, name: '律師'},\n    {id: 3, name: '祭司'},\n    {id: 4, name: '盲女'},\n    {id: 5, name: '前鋒'},\n    {id: 6, name: '傭兵'},\n    {id: 7, name: '空軍'},\n    {id: 8, name: '魔術師'},\n    {id: 9, name: '冒險家'},\n    {id: 10, name: '機械師'},\n    {id: 11, name: '慈善家'},\n    {id: 12, name: '醫生'},\n    {id: 13, name: '幸運兒'}\n  ];\n  constructor( private componentFactoryResolver: ComponentFactoryResolver) { }\n\n  ngOnInit() {\n\n  }\n\n  loadComponent() {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicAdComponent);\n    const viewContainerRef = this.appAdHost.viewContainerRef;\n    // viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    (<DynamicAdComponent>componentRef.instance).data = this.fatherArray;\n    this.isLoad = true;\n  }\n\n}\n\n","module.exports = \"\"","module.exports = \"<div style=\\\"background: #FFF59D;\\\" margin-top padding shadow>\\n  <p>\\n      DynamicComponent\\n  </p>\\n  <button mat-raised-button style=\\\"margin:1px;\\\" *ngFor=\\\"let item of data\\\" color=\\\"primary\\\">\\n    {{ item.name }}\\n  </button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dynamic-ad',\n  templateUrl: './dynamic-ad.component.html',\n  styleUrls: ['./dynamic-ad.component.css']\n})\nexport class DynamicAdComponent implements OnInit {\n  data: any[];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AngularCLIComponent } from './angular-cli/angular-cli.component';\nimport { AngularBasicComponent } from './angular-basic/angular-basic.component';\nimport { AngularAdvanceComponent } from './angular-advance/angular-advance.component';\nimport { AngularDynamicComponent } from './angular-dynamic/angular-dynamic.component';\nimport { AngularDynamicFormsComponent } from './angular-dynamic-forms/angular-dynamic-forms.component';\nimport { AngularTranslateComponent } from './angular-translate/angular-translate.component';\nimport { AngularTestComponent } from './angular-test/angular-test.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'basic', pathMatch: 'full' },\n  { path: 'basic', component: AngularBasicComponent },\n  { path: 'cli', component: AngularCLIComponent },\n  { path: 'advance', component: AngularAdvanceComponent },\n  { path: 'dynamicComponent', component: AngularDynamicComponent },\n  { path: 'dynamicForms', component: AngularDynamicFormsComponent },\n  { path: 'translate', component: AngularTranslateComponent },\n  { path: 'test', component: AngularTestComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AngularRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1>單元測試：</h1>\\n<img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-test/a14.png\\\" />\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AngularTestService } from './angular-test.service';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-angular-test',\n  templateUrl: './angular-test.component.html',\n  styleUrls: ['./angular-test.component.css']\n})\nexport class AngularTestComponent implements OnInit {\n\n  constructor(\n    private angularTestService: AngularTestService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addTwoNumbers(num1: number, num2: number) {\n    return num1 + num2;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularTestService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  addTwoNumbers(num1: number, num2: number) {\n    return num1 + num2;\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1>多語系</h1>\\n<h2>使用ngx-translate</h2>\\n<p>安裝：</p>\\n<p>npm install @ngx-translate/core --save</p>\\n<p>npm install @ngx-translate/http-loader --save</p>\\n<hr>\\n<img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-translate/a11.png\\\" />\\n<img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-translate/a12.png\\\" />\\n<img style=\\\"max-width: 850px;\\\" responsive-img src=\\\"assets/images/angular-translate/a13.png\\\" />\\n<hr>\\n<h4>在樣板中使用</h4>\\n\\n{{ 'title' | translate }}\\n{{ name | translate }}\\n<button mat-raised-button (click)=\\\"translate()\\\" color=\\\"warn\\\">切換語系</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-angular-translate',\n  templateUrl: './angular-translate.component.html',\n  styleUrls: ['./angular-translate.component.css']\n})\nexport class AngularTranslateComponent implements OnInit {\n  name = '名字';\n  constructor(private translateService: TranslateService) { }\n\n  ngOnInit() {\n  }\n\n  translate() {\n    this.translateService.get('title').subscribe(\n      title => {\n        console.log(title);\n      }\n    );\n\n    this.translateService.get('name').subscribe(\n      name => {\n        this.name = 'name';\n      }\n    );\n\n\n\n    this.translateService.use('en');\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularRoutingModule } from './angular-routing.module';\nimport { AngularCLIComponent } from './angular-cli/angular-cli.component';\nimport { AngularBasicComponent } from './angular-basic/angular-basic.component';\nimport { CommonShareModule } from '../shared-modules/common-share/common-share.module';\nimport { ReactFormComponent } from './react-form/react-form.component';\nimport { AngularDetailComponent } from './angular-basic/angular-detail/angular-detail.component';\nimport { AngularAdvanceComponent } from './angular-advance/angular-advance.component';\nimport { AngularDynamicComponent } from './angular-dynamic/angular-dynamic.component';\nimport { AdHostDirective } from './angular-dynamic/ad-host.directive';\nimport { DynamicAdComponent } from './angular-dynamic/dynamic-ad/dynamic-ad.component';\nimport { AngularDynamicFormsComponent } from './angular-dynamic-forms/angular-dynamic-forms.component';\nimport { AngularTranslateComponent } from './angular-translate/angular-translate.component';\nimport { AngularTestComponent } from './angular-test/angular-test.component';\n\n@NgModule({\n  imports: [\n    CommonShareModule,\n    AngularRoutingModule,\n  ],\n  declarations: [\n    AngularCLIComponent,\n    AngularBasicComponent,\n    ReactFormComponent,\n    AngularDetailComponent,\n    AngularAdvanceComponent,\n    AngularDynamicComponent,\n    AdHostDirective,\n    DynamicAdComponent,\n    AngularDynamicFormsComponent,\n    AngularTranslateComponent,\n    AngularTestComponent\n  ],\n  entryComponents: [ DynamicAdComponent]\n})\nexport class AngularModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  react-form works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-react-form',\n  templateUrl: './react-form.component.html',\n  styleUrls: ['./react-form.component.css']\n})\nexport class ReactFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}